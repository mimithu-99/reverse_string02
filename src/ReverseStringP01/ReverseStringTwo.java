package ReverseStringP01;

public class ReverseStringTwo {
    public static void main(String[] args) {
        // Character Array.
        String str = "ABCD";
        String rev = " ";

        char a [] = str.toCharArray();
        int len = a.length;
        for (int i = len -1; i >= 0 ; i--)// 3 2 1 0
        {
            rev = rev + a [i]; // DCBA

        }
        System.out.println("Reverse string is: " + rev);
    }
}
/*

public class ReverseStringTwo { // এই লাইনটি একটি পাবলিক ক্লাস ঘোষণা করছে যার নাম ReverseStringTwo।
    public static void main(String[] args) { // এটি মেইন মেথড। এটি প্রোগ্রামের প্রবেশ পয়েন্ট যেখানে কার্যক্রম শুরু হয়।
        // ক্যারেক্টার অ্যারে ব্যবহার করে স্ট্রিং উল্টো করা।

        String str = "ABCD"; // এই লাইনটি 'str' নামে একটি স্ট্রিং ভেরিয়েবল ঘোষণা করছে এবং এটিকে "ABCD" মান দিয়ে আরম্ভ করছে।
        String rev = ""; // এই লাইনটি 'rev' নামে আরেকটি স্ট্রিং ভেরিয়েবল ঘোষণা করছে এবং এটিকে খালি স্ট্রিং দিয়ে আরম্ভ করছে। আমরা এটি ব্যবহার করে স্ট্রিংটি উল্টো করব।

        char a[] = str.toCharArray(); // এই লাইনটি 'str' স্ট্রিংটি একটি ক্যারেক্টার অ্যারেতে রূপান্তরিত করছে এবং এটি 'a' নামের ক্যারেক্টার অ্যারেতে সংরক্ষণ করছে।
        // উদাহরণ: "ABCD" স্ট্রিংটি 'a' অ্যারেতে ['A', 'B', 'C', 'D'] রূপান্তরিত হবে।

        int len = a.length; // এই লাইনটি 'a' অ্যারের দৈর্ঘ্য গণনা করছে এবং এটি 'len' নামের ইন্টিজার ভেরিয়েবলে সংরক্ষণ করছে। ['A', 'B', 'C', 'D'] এর জন্য, len হবে 4।

        for (int i = len - 1; i >= 0; i--) { // এটি একটি for লুপ যা 'i' দিয়ে শুরু হয়, যা অ্যারের শেষ ইনডেক্স (len - 1, অর্থাৎ 3) থেকে শুরু হয় এবং 0 পর্যন্ত চলে।
            // len - 1 মানে অ্যারের শেষ অক্ষরের ইনডেক্স। উদাহরণস্বরূপ: ['A', 'B', 'C', 'D'] এর জন্য, len - 1 হল 3 কারণ ইনডেক্স 0 থেকে শুরু হয়।
            rev = rev + a[i]; // এই লাইনটি 'a' অ্যারের ইনডেক্স 'i' এর ক্যারেক্টারটি 'rev' এর সাথে যোগ করে এবং 'rev' তে সংরক্ষণ করে।
            // উদাহরণস্বরূপ: প্রথমবার লুপটি চালানোর সময়, a[3] হল 'D', তাই rev = "" + "D" যা "D"।
            // দ্বিতীয়বার লুপটি চালানোর সময়, a[2] হল 'C', তাই rev = "D" + "C" যা "DC"।
            // তৃতীয়বার লুপটি চালানোর সময়, a[1] হল 'B', তাই rev = "DC" + "B" যা "DCB"।
            // চতুর্থবার লুপটি চালানোর সময়, a[0] হল 'A', তাই rev = "DCB" + "A" যা "DCBA"।
        }
        System.out.println("Reverse string is: " + rev); // এই লাইনটি 'rev' প্রিন্ট করে, যা উল্টো স্ট্রিংটি হবে। // আউটপুট হবে "Reverse string is: DCBA"

    }
}
এখন, এই কোডটি কীভাবে কাজ করে তা ধাপে ধাপে ব্যাখ্যা করছি:

public class ReverseStringTwo { – এটি একটি নতুন ক্লাস ঘোষণা করে যার নাম ReverseStringTwo।
public static void main(String[] args) { – এটি মেইন মেথড, যেখান থেকে প্রোগ্রামটি চালু হয়।
String str = "ABCD"; – একটি স্ট্রিং ভেরিয়েবল str তৈরি করে এবং এটিতে "ABCD" মান রাখে।
String rev = ""; – একটি খালি স্ট্রিং ভেরিয়েবল rev তৈরি করে যেখানে উল্টো স্ট্রিংটি রাখা হবে।
char a[] = str.toCharArray(); – str স্ট্রিংটি একটি ক্যারেক্টার অ্যারেতে রূপান্তরিত করে এবং এটিকে a অ্যারেতে রাখে।
উদাহরণ: "ABCD" থেকে ['A', 'B', 'C', 'D']।
int len = a.length; – a অ্যারের দৈর্ঘ্য গণনা করে এবং এটিকে len ভেরিয়েবলে রাখে।
উদাহরণ: ['A', 'B', 'C', 'D'] এর দৈর্ঘ্য ৪।
for (int i = len - 1; i >= 0; i--) { – একটি লুপ যা i দিয়ে শুরু হয়, যা অ্যারের শেষ ইনডেক্স (len - 1) থেকে শুরু হয় এবং 0 পর্যন্ত চলবে।
rev = rev + a[i]; – লুপটি প্রতিবার চলার সময়, a অ্যারের বর্তমান ক্যারেক্টারটি rev এর সাথে যোগ করে।
উদাহরণ:
প্রথমবার: rev = "" + "D" যা "D"।
দ্বিতীয়বার: rev = "D" + "C" যা "DC"।
তৃতীয়বার: rev = "DC" + "B" যা "DCB"।
চতুর্থবার: rev = "DCB" + "A" যা "DCBA"।
System.out.println("Reverse string is: " + rev); – rev স্ট্রিংটি প্রিন্ট করে, যা উল্টো স্ট্রিংটি হবে।
আউটপুট: "Reverse string is: DCBA"।
আশা করি, এই বিশদ ব্যাখ্যা তোমার জন্য কোডটি বুঝতে সহজ করবে।







 */