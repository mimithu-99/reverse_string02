package ReverseStringPo2;

public class ReverseStringFive {
    public static void main(String[] args) {
        String st = "Monirul";
        char [] ch = st.toCharArray();
        for (int i = ch.length -1; i >= 0; i--) {
            System.out.print(ch[i]);

        }
    }

}
/*
public class ReverseStringFive { // এই লাইনটি একটি পাবলিক ক্লাস ঘোষণা করছে যার নাম ReverseStringFive।
    public static void main(String[] args) { // এটি মেইন মেথড। এটি প্রোগ্রামের প্রবেশ পয়েন্ট যেখানে কার্যক্রম শুরু হয়।
        String st = "Monirul"; // এই লাইনটি 'st' নামে একটি স্ট্রিং ভেরিয়েবল ঘোষণা করছে এবং এটিকে "Monirul" মান দিয়ে আরম্ভ করছে।
        char[] ch = st.toCharArray(); // এই লাইনটি 'st' স্ট্রিংটি একটি ক্যারেক্টার অ্যারেতে রূপান্তরিত করছে এবং এটি 'ch' নামের ক্যারেক্টার অ্যারেতে সংরক্ষণ করছে।
        // উদাহরণ: "Monirul" স্ট্রিংটি 'ch' অ্যারেতে ['M', 'o', 'n', 'i', 'r', 'u', 'l'] রূপান্তরিত হবে।

        for (int i = ch.length - 1; i >= 0; i--) { // এটি একটি for লুপ যা 'i' দিয়ে শুরু হয়, যা অ্যারের শেষ ইনডেক্স (ch.length - 1, অর্থাৎ 6) থেকে শুরু হয় এবং 0 পর্যন্ত চলবে।
            // ch.length - 1 মানে অ্যারের শেষ অক্ষরের ইনডেক্স। উদাহরণস্বরূপ: ['M', 'o', 'n', 'i', 'r', 'u', 'l'] এর জন্য, ch.length - 1 হল 6 কারণ ইনডেক্স 0 থেকে শুরু হয়।
            System.out.print(ch[i]); // এই লাইনটি 'ch' অ্যারের ইনডেক্স 'i' এর ক্যারেক্টারটি প্রিন্ট করে।
            // উদাহরণস্বরূপ: প্রথমবার লুপটি চালানোর সময়, ch[6] হল 'l', তাই এটি 'l' প্রিন্ট করবে।
            // দ্বিতীয়বার লুপটি চালানোর সময়, ch[5] হল 'u', তাই এটি 'u' প্রিন্ট করবে।
            // তৃতীয়বার লুপটি চালানোর সময়, ch[4] হল 'r', তাই এটি 'r' প্রিন্ট করবে।
            // চতুর্থবার লুপটি চালানোর সময়, ch[3] হল 'i', তাই এটি 'i' প্রিন্ট করবে।
            // পঞ্চমবার লুপটি চালানোর সময়, ch[2] হল 'n', তাই এটি 'n' প্রিন্ট করবে।
            // ষষ্ঠবার লুপটি চালানোর সময়, ch[1] হল 'o', তাই এটি 'o' প্রিন্ট করবে।
            // সপ্তমবার লুপটি চালানোর সময়, ch[0] হল 'M', তাই এটি 'M' প্রিন্ট করবে।
        }
    }
}
এখন, এই কোডটি কীভাবে কাজ করে তা ধাপে ধাপে ব্যাখ্যা করছি:

public class ReverseStringFive { – এটি একটি নতুন ক্লাস ঘোষণা করে যার নাম ReverseStringFive।
public static void main(String[] args) { – এটি মেইন মেথড, যেখান থেকে প্রোগ্রামটি চালু হয়।
String st = "Monirul"; – একটি স্ট্রিং ভেরিয়েবল st তৈরি করে এবং এটিতে "Monirul" মান রাখে।
char[] ch = st.toCharArray(); – st স্ট্রিংটি একটি ক্যারেক্টার অ্যারেতে রূপান্তরিত করে এবং এটিকে ch অ্যারেতে রাখে।
উদাহরণ: "Monirul" থেকে ['M', 'o', 'n', 'i', 'r', 'u', 'l']।
for (int i = ch.length - 1; i >= 0; i--) { – একটি লুপ যা i দিয়ে শুরু হয়, যা অ্যারের শেষ ইনডেক্স (ch.length - 1) থেকে শুরু হয় এবং 0 পর্যন্ত চলবে।
System.out.print(ch[i]); – লুপের প্রতিটি ধাপে, এটি ch অ্যারের বর্তমান ক্যারেক্টারটি প্রিন্ট করে।
উদাহরণ:
প্রথমবার: ch[6] হল 'l', তাই এটি 'l' প্রিন্ট করবে।
দ্বিতীয়বার: ch[5] হল 'u', তাই এটি 'u' প্রিন্ট করবে।
তৃতীয়বার: ch[4] হল 'r', তাই এটি 'r' প্রিন্ট করবে।
চতুর্থবার: ch[3] হল 'i', তাই এটি 'i' প্রিন্ট করবে।
পঞ্চমবার: ch[2] হল 'n', তাই এটি 'n' প্রিন্ট করবে।
ষষ্ঠবার: ch[1] হল 'o', তাই এটি 'o' প্রিন্ট করবে।
সপ্তমবার: ch[0] হল 'M', তাই এটি 'M' প্রিন্ট করবে।
আউটপুট:
Copy code
lurinoM
এই কোডটি "Monirul" স্ট্রিংটি উল্টো করে প্রিন্ট করবে, যার আউটপুট হবে "lurinoM"।

আশা করি, এই বিশদ ব্যাখ্যা তোমার জন্য কোডটি বুঝতে সহজ করবে।
 */